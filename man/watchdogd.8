.\"                                                               -*-nroff-*-
.\" Copyright (c) 2016-2024  Joachim Wiberg <troglobit@gmail.com>
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd Dec 20, 2023
.Dt WATCHDOGD 8 SMM
.Os
.Sh NAME
.Nm watchdogd
.Nd Advanced system & process monitor daemon
.Sh SYNOPSIS
.Nm
.Op Fl hnsVx
.Op Fl f Ar FILE
.Op Fl l Ar LEVEL
.Op Fl t Ar SEC
.Op Fl T Ar SEC
.Op Ar /dev/watchdogN
.Sh DESCRIPTION
.Nm
is an advanced system and process supervisor daemon, primarily intended
for embedded Linux and server systems.  It can monitor critical system
resources, supervise the heartbeat of processes, record any deadline
transgressions, and initiate a controlled reset if needed.  All while
taking care of "kicking" one or more watchdog device nodes.
.Pp
Available system monitors, see
.Xr watchdogd.conf 5
for details:
.Pp
.Bl -bullet -width 1n -compact
.It
File descriptor leaks
.It
File system usage
.It
Generic script
.It
Load average
.It
Memory leaks
.It
Process live locks
.It
Reset counter, e.g., for snmpEngineBoots (RFC 2574)
.It
Temperature
.El
.Pp
When the system starts up,
.Nm
determines the
.Em reset cause
by querying the kernel.  In case of system reset, and not power loss,
the
.Em reset reason
is available already in a file, stored by
.Nm
before the reset.  This reset reason can be then be used by an operator
or network management system (NMS) to put the system in an operational
safe state, or non-operational safe state.  Use
.Xr watchdogctl 1
to query status and control
.Nm .
.Sh WATCHDOG
A watchdog timer (WDT) is something most motherboards of laptops and
servers, and virtually all embedded systems, today are equipped with.
It is basically a small timer connected to the reset circuitry so that
it can reset the board when the timer expires.  It is up to the software
to ensure it never does.
.Pp
The Linux kernel provides a common userspace interface
.Pa /dev/watchdog ,
created automatically when the appropriate driver module is loaded.  If
your board does not have a WDT the kernel provides a "softdog" module
which could be good enough.
.Pp
The idea is to have a process in userspace that runs in the background
of your system, with the sole purpose of making sure the HW timer never
expires by "kicking" it periodically.  In case of system overload, when
there is no more CPU time for the process to run, it fails to "kick" the
kernel WDT driver, which in turn causes the WDT to reset the system.
.Sh OPTIONS
.Pp
Without any arguments,
.Nm
opens the
.Pa /dev/watchdog
WDT device node, forks to the background, tries to set a 20 sec WDT
timeout, and then kicks the WDT every 10 sec.  See
.Sx OPERATION
for more information.
.Pp
.Nm
follows the usual UNIX command line syntax, with long options starting
with two dashes (`-').  The options are as follows:
.Bl -tag -width Ds
.It Fl f, -config Ar FILE
Use FILE for daemon configuration.  Default:
.Pa /etc/watchdogd.conf
.It Fl h, -help
Show summary of command line options and exit.
.It Fl l, -loglevel Ar LEVEL
Set log level: none, err, info,
.Ar notice ,
debug.
.It Fl n, -foreground
Start in foreground, required when started by systemd or Finit, default is to daemonize and background.
.It Fl s, -syslog
Use
.Xr syslog 3
for log messages, warnings and error conditions.  This is the default
when running in the background.  When running in the foreground, see
.Fl n ,
log messages are printed to stderr.
.It Fl t, -interval Ar SEC
HW watchdog (WDT) kick interval, in seconds, default: 10
.It Fl T, -timeout Ar SEC
HW watchdog timer (WDT) timeout, in seconds, default: 20
.It Fl V, -version
Show program version and exit.
.It Fl x, -safe-exit
Disable HW watchdog (WDT) on orderly exit from
.Nm .
Not supported in all WDT drivers due to HW limitations.  Some drivers
emulate support by keeping an in-kernel thread to continue kicking the
WDT.  Make sure to try it first, or verify the WDT driver source code.
.El
.Ss Example
.Bd -literal -offset indent
watchdogd -T 120 -t 30 /dev/watchdog2
.Ed
.Sh OPERATION
By default,
.Nm
forks off a daemon in the background, opens the
.Pa /dev/watchdog
device, attempts to set the default WDT timeout to 20 seconds, and then
enters its main loop where it kicks the watchdog every 10 seconds.
.Pp
If a WDT device driver does not support setting the timeout,
.Nm
attempts to query the actual (possibly hard coded) watchdog timeout and
then uses half that time as the kick interval.
.Pp
When
.Nm
backgrounds itself, syslog is implicitly used for all informational and
debug messages.  If a user requests to run the daemon in the foreground
.Nm
will also log to stderr, unless the user gives the
.Fl -syslog
option to force use of syslog.
.Pp
See
.Xr watchdogd.conf 5
for all available settings, and the command line tool
.Xr watchdogctl 1
to enable more features, query status, and control operation.
.Sh SIGNALS
.Nm
responds to the following signals:
.Pp
.Bl -tag -width TERM -compact
.It TERM
Safe exit if started with the
.Fl x
flag, otherwise same as PWR.
.It INT
Same as TERM
.It PWR
Force a system reboot.  Systems with Finit use this to reboot.
.It QUIT
Same as TERM
.It HUP
Reload configuration file
.It USR1
Ignored, was used in an earlier version.
.It USR2
Same as USR1
.El
.Sh FILES
.Bl -tag -width /var/lib/misc/watchdogd.state -compact
.It Pa /etc/watchdogd.conf
Daemon configuration file. Read once when starting up and on SIGHUP or
.Cm reload
command from
.Xr watchdogctl 1 .
.It Pa /var/lib/misc/watchdogd.state
State pre boot, lists coming (re)boot reason.  Do not rely on the
contents of this file, it is used by
.Nm
to maintain state across boots.  If you want the status and reset
reason of the last boot, read
.Pa /run/watchdogd/status
instead, or preferbly, use
.Xr watchdogctl 1 .
.It Pa /run/watchdogd/pid
For convenience to other processes when sending signals.  Also a useful
synchronization point, because the PID file is only created when
.Nm
is ready to receive signals and register processes with the process
supervisor API.  Touched as a response to SIGHUP or
.Cm reload
command.
.It Pa /run/watchdogd/status
Current status, in JSON format, contains kernel WDT
.Em reset cause ,
.Nm
timeout and period, and the
.Em reset reason
.Nm
determined from this boot.  Please note, output format has changed to
JSON since v4.0.  It now shows all configured devices and their status,
including capability flags.
.It Pa /run/watchdogd/sock
UNIX domain socket used by libwdog and
.Nm watchdogctl
to connect to
.Nm
.El
.Sh SEE ALSO
.Xr watchdogctl 1
.Xr watchdogd.conf 5
.Sh AUTHORS
.Nm
is an improved version of the original, created by Michele d'Amico and
adapted to uClinux-dist by Mike Frysinger.  It is maintained by Joachim
Wiberg at
.Lk https://github.com/troglobit/watchdogd "GitHub" .
